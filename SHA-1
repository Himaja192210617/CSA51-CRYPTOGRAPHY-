#include <stdio.h>
#include <string.h>
#include <CommonCrypto/CommonDigest.h>  // For SHA1 function on macOS

// Function to convert the hash output (byte array) to a hex string
void bytesToHex(unsigned char* hash, char* outputBuffer) {
    int i;
    for (i = 0; i < CC_SHA1_DIGEST_LENGTH; i++) {
        sprintf(outputBuffer + (i * 2), "%02x", hash[i]);
    }
    outputBuffer[CC_SHA1_DIGEST_LENGTH * 2] = 0;  // Null terminate the string
}

int main() {
    // Test case 1: Empty string
    char* input = "";
    unsigned char hash[CC_SHA1_DIGEST_LENGTH];  // Array to store the SHA-1 hash
    char hexOutput[CC_SHA1_DIGEST_LENGTH * 2 + 1];  // Array to store the hex string

    // Calculate SHA-1 hash for the empty string
    CC_SHA1(input, (CC_LONG)strlen(input), hash);
    bytesToHex(hash, hexOutput);
    printf("SHA1(\"%s\") = %s\n\n", input, hexOutput);

    // Test case 2: String "abc"
    input = "abc";
    CC_SHA1(input, (CC_LONG)strlen(input), hash);
    bytesToHex(hash, hexOutput);
    printf("SHA1(\"%s\") = %s\n\n", input, hexOutput);

    // Test case 3: String "abcdefghijklmnopqrstuvwxyz"
    input = "abcdefghijklmnopqrstuvwxyz";
    CC_SHA1(input, (CC_LONG)strlen(input), hash);
    bytesToHex(hash, hexOutput);
    printf("SHA1(\"%s\") = %s\n", input, hexOutput);

    return 0;
}
